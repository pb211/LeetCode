package stack;

import java.util.Stack;
class P150_EvaluateReversePolishNotation {

    public static void main(String[] args) {
        String[] tokens = {"10", "6", "9", "3", "+", "-11", "*", "/", "*", "17", "+", "5", "+"};
        int res = evalRPN(tokens);
        System.out.println("res = " + res);
    }

   public static int evalRPN(String[] tokens) {
          Stack<Integer> stack = new Stack<Integer>();
          for (String s : tokens) {
              if (s.equals("+")) {
                  stack.push(stack.pop() + stack.pop());
              } else if (s.equals("-")) {
                  stack.push(-stack.pop() + stack.pop());
              } else if (s.equals("*")) {
                  stack.push(stack.pop() * stack.pop());
              } else if (s.equals("/")) {
                  int num1 = stack.pop();
                  stack.push(stack.pop() / num1);
              } else {
                  stack.push(Integer.parseInt(s));
              }
          }
          return stack.pop();
      }
}
