
public class P63_differentPath2 {
	public static void main(String[] args) {
		P63_differentPath2 p=new P63_differentPath2();
		int[][] nums={
			{0,0,0},
			{0,1,0},
			{0,0,0}
		};
		int res = p.uniquePathsWithObstacles(nums);
		System.out.println(res);
    }
	public int uniquePathsWithObstacles(int[][] obstacleGrid) {
	    int n = obstacleGrid.length;
	    int m = obstacleGrid[0].length;
	    int[][] dp = new int[n][m];
	    boolean iflag = false;
	    boolean jflag = false;
	    for (int i = 0; i < n; i++) {
	        for (int j = 0; j < m; j++) {
	            if (obstacleGrid[i][j] == 1) {
	                dp[i][j] = 0;
	                if (i == 0) iflag = true;
	                if (j == 0) jflag = true;
	            } else if (i == 0) {
	                dp[i][j] = iflag ? 0 : 1;
	            } else if (j == 0) {
	                dp[i][j] = jflag ? 0 : 1;
	            } else {
	                dp[i][j] = dp[i][j - 1] + dp[i - 1][j];
	            }
	        }
	    }
	    return dp[n - 1][m - 1];
	}
}
